CREATE or ALTER procedure silver.load_data
as
BEGIN
	BEGIN TRY
		Truncate table silver.crm_cust_info;
		INSERT INTO silver.crm_cust_info (
			cst_id, 
			cst_key, 
			cst_firstname, 
			cst_lastname, 
			cst_marital_status, 
			cst_gndr,
			cst_create_date
		)
		select cst_id,
		cst_key,
		TRIM(cst_firstname) as cst_firstname,
		TRIM(cst_lastname) as cst_lastname,
		CASE TRIM(cst_marital_status)
			  WHEN 'M' THEN 'Married'
			  WHEN 'S' THEN 'Single'
			  ELSE 'N/A'
		END as cst_marital_status,
		CASE TRIM(cst_gndr)
			  WHEN 'M' THEN 'Male'
			  WHEN 'F' THEN 'Female'
			  ELSE 'N/A'
		END as cst_gndr,
		cst_create_date
		from(
		select *,
		row_number() over(partition by cst_id order by cst_create_date desc) as flag
		from bronze.crm_cust_info
		where cst_id IS NOT NULL) t
		where flag=1;



		Truncate table silver.crm_prd_info;
		Insert into silver.crm_prd_info(
			 prd_id,
			cat_id,
			prd_key,
			prd_nm,
			prd_cost,
			prd_line,
			prd_start_dt,
			prd_end_dt
		)
		select 
		prd_id,
		REPLACE(SUBSTRING(prd_key,1,5),'-','_') as cat_id,
		SUBSTRING(prd_key,7,LEN(prd_key)) as prd_key,
		prd_nm,
		ISNULL(prd_cost,0) as prd_cost,
		CASE UPPER(TRIM(prd_line))
			 WHEN 'R' THEN 'Road'
			 WHEN 'S' THEN 'Other Sales'
			 WHEN 'M' THEN 'Mountain'
			 WHEN 'T' THEN 'Touring'
			 ELSE ''
		END as prd_line,
		CAST(prd_start_dt as DATE) as prd_start_dt,
		CAST(LEAD(prd_start_dt) over( Partition By prd_key order by prd_start_dt)-1 as DATE) as prd_end_dt
		from bronze.crm_prd_info;


		Truncate table silver.crm_sales_details;
		Insert into silver.crm_sales_details(
			sls_ord_num,
			sls_prd_key,
			sls_cust_id,
			sls_order_dt,
			sls_ship_dt,
			sls_due_dt,
			sls_sales,
			sls_quantity,
			sls_price
		)
		select 
		sls_ord_num,
		sls_prd_key,
		sls_cust_id,
		CASE 
			WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NULL
			ELSE CAST(CAST(sls_order_dt AS VARCHAR) AS DATE)
		END AS sls_order_dt,
		CASE 
			WHEN sls_ship_dt = 0 OR LEN(sls_ship_dt) != 8 THEN NULL
			ELSE CAST(CAST(sls_ship_dt AS VARCHAR) AS DATE)
		END AS sls_ship_dt,
		CASE 
			WHEN sls_due_dt = 0 OR LEN(sls_due_dt) != 8 THEN NULL
			ELSE CAST(CAST(sls_due_dt AS VARCHAR) AS DATE)
			END AS sls_due_dt,
		CASE WHEN sls_sales is null or sls_sales<=0 or (sls_quantity*sls_price) != sls_sales Then (sls_quantity*sls_price)
			ELSE sls_sales
		END as sls_sales,
		sls_quantity,
		CASE WHEN sls_price is null or sls_price <=0 THEN sls_sales/NULLIF(sls_quantity,0)
			ELSE sls_price
		END as sls_price
		from bronze.crm_sales_details;

		Truncate table silver.erp_cust_az12;
		Insert into silver.erp_cust_az12(
			cid,
			bdate,
			gen
		)
		select
		CASE WHEN(cid like 'NAS%') THEN SUBSTRING(cid,4,len(cid))
			 ELSE cid
		END as cid,
		CASE WHEN bdate>GETDATE() THEN NULL
			 ELSE bdate
		END as bdate,
		CASE
			 WHEN UPPER(TRIM(gen)) in('F','Female') THEN 'Female'
			 WHEN UPPER(TRIM(gen)) in('M','Male') THEN 'Male'
			 ELSE 'N/A'
		END as gen
		from bronze.erp_cust_az12;



		Truncate table silver.erp_loc_a101;
		Insert into silver.erp_loc_a101(
			cid,
			cntry
		)
		select
		REPLACE(cid,'-',''),
		CASE WHEN TRIM(cntry)='DE' THEN 'Germany'
			 WHEN TRIM(cntry) in('USA','US') THEN 'United States'
			 WHEN Trim(cntry)='' OR cntry is NULL THEN 'N/A'
			 Else cntry
		END as cntry
		from bronze.erp_loc_a101;


		Truncate table silver.erp_px_cat_g1v2;
		Insert into silver.erp_px_cat_g1v2(
			id,
			cat,
			subcat,
			maintenance
		)
		select
		id,
		cat,
		subcat,
		maintenance
		from bronze.erp_px_cat_g1v2;
	END TRY
	BEGIN CATCH
		PRINT 'ERROR MESSAGE '+ ERROR_MESSAGE();
	END CATCH
END

EXEC silver.load_data;
